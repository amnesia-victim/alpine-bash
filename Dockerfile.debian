FROM debian:stretch
ARG CLOUD_SDK_VERSION=245.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION
ENV TERRAFORM_VERSION=0.11.14
ENV TF_DEV=true
ENV TF_RELEASE=true

ARG INSTALL_COMPONENTS
ENV PATH "$PATH:/opt/google-cloud-sdk/bin/"
RUN apt-get update -qqy && apt-get install -qqy \
    curl \
    gcc \
    wget \
    unzip \
    python3-dev \
    python3-setuptools \
    apt-transport-https \
    lsb-release \
    openssh-client \
    git \
    gnupg \
    python3-pip && \
    pip3 install crcmod && \
    pip3 install awscli 

RUN export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && \
    echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    apt-get update && apt-get install -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0 $INSTALL_COMPONENTS && \
    gcloud config set core/disable_usage_reporting true && \
    gcloud config set component_manager/disable_update_check true && \
    gcloud config set metrics/environment github_docker_image && \
    gcloud --version

RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -

# RUN add-apt-repository \
#     "deb [arch=amd64] https://download.docker.com/linux/debian \
#     $(lsb_release -cs) \
#     stable"
# RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
# RUN apt-get update && apt-get install -y \
#     docker-ce \
#     awscli 

# Installing Terraform
RUN wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin && \
    terraform --version

ADD settings/motd /etc/motd
# Set Root to bash not ash and overwrite .bashrc
RUN sed -i 's/root:\/bin\/ash/root:\/bin\/bash/' /etc/passwd && \
    cp /etc/skel/.bashrc /root/.bashrc

# Link vi to vim 
RUN ln -sf vim /usr/bin/vi

# Link python to python3
RUN cd /usr/bin && ln -sf pip3 pip && ln -sf pydoc3 pydoc && ln -sf python3 python && ln -sf python3-config python-config

# Installing Ansible
RUN pip3 install ansible ; ansible --version

# Customizing Ansible
RUN mkdir /etc/ansible ; echo 'localhost' > /etc/ansible/hosts


VOLUME ["/root"]
USER root
WORKDIR /root

CMD ["/bin/bash"]